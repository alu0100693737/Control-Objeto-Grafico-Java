package controlBola;

import static java.lang.String.format;

import org.assertj.core.api.AbstractAssert;
import org.assertj.core.api.Assertions;

/**
 * {@link VistaControlBola} specific assertions - Generated by CustomAssertionGenerator.
 */
public class VistaControlBolaAssert extends AbstractAssert<VistaControlBolaAssert, VistaControlBola> {

	/**
	 * Creates a new </code>{@link VistaControlBolaAssert}</code> to make assertions on actual VistaControlBola.
	 * @param actual the VistaControlBola we want to make assertions on.
	 */
	public VistaControlBolaAssert(VistaControlBola actual) {
		super(actual, VistaControlBolaAssert.class);
	}

	/**
	 * An entry point for VistaControlBolaAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
	 * With a static import, one's can write directly : <code>assertThat(myVistaControlBola)</code> and get specific assertion with code completion.
	 * @param actual the VistaControlBola we want to make assertions on.
	 * @return a new </code>{@link VistaControlBolaAssert}</code>
	 */
	public static VistaControlBolaAssert assertThat(VistaControlBola actual) {
		return new VistaControlBolaAssert(actual);
	}

}
